#!/bin/bash
# -*- mode: shell-script-mode -*-
#
# The curly braces on the line below allows us to edit this file without worrying
# if doing so while the script is running.
{
    IMAGE=bjodah/tomevermes-patchwork:23.h.1.2.7.1   # the default image
    CONTAINER_FOLDER=""
    MOUNT_HOME=0
    MOUNT_GPG_SOCKET=0
    NAME=bjodah
    WITH_GUI=1
    show_help(){
        echo "Launch a container using podman run with some nice defaults"
        echo "also supports building container images on-the-fly."
        echo ""
        echo "Usage:"
        echo "--name              name of containerimage, default: $NAME"
        echo "--image             name of containerimage, default: $IMAGE"
        echo "--container-folder  name of container folder to build image from."
        echo "--no-gui            do not set DISPLAY et al., do not mount X11 socket folder."
        echo "--mount-home        Mount home folder *AND* symlink ~/.ssh ~/.gnupg folders"
        echo ""
        echo "Example:"
        echo ' $ bjodah -- emacs ~/.bashrc '
        echo ' $ bjodah --net=host -- jupyter notebook --NotebookApp.allow_origin="*" --ip=0.0.0.0'
    }
    declare -a PODMAN_RUN_ARGS
    while [ $# -gt 0 ]; do
        case "$1" in
            -h|--help|\?)
                show_help
                exit 0
                ;;
            --name)
                shift
                NAME=$1
                shift
                ;;
            --image)
                shift
                IMAGE=$1
                shift
                ;;
            --container-folder)
                shift
                CONTAINER_FOLDER=$1
                shift
                ;;
            --no-gui)
                WITH_GUI=0
                shift
                ;;
	    --gpg-socket)
		MOUNT_GPG_SOCKET=1
		shift
		;;
            --mount-home)
                MOUNT_HOME=1
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                PODMAN_RUN_ARGS+=("$1")
                shift
                ;;
                # show_help
                # exit 1
                # ;;
        esac
    done

    if [ $# -eq 0 ]; then
        >&2 echo "No command to execute, exiting."
        exit 1
    fi
    if [[ $MOUNT_GPG_SOCKET == 1 ]]; then
	CUR_GPG_SOCK=`gpgconf --list-dir agent-ssh-socket`
	PODMAN_RUN_ARGS+=("-v ${CUR_GPG_SOCK}:${CUR_GPG_SOCK}")
    fi
    if [[ $MOUNT_HOME == 1 ]]; then
	if [[ $MOUNT_GPG_SOCKET == 1 ]]; then
	    >&2 echo "Cannot currently both mount home and gpg-socket. Choose one."
	fi
        cd $HOME
        PODMAN_RUN_ARGS+=("-e HOME")
        PRE_CMD="ln -s ~/.ssh /root/.ssh; ln -s ~/.gnupg /root/.gnupg;"
    fi
    # https://github.com/containers/toolbox/blob/31e01ac46b0e1caa0e72275148e5c364e9c08459/src/pkg/utils/utils.go#L69-L94
    preserved_vars=(COLORTERM \
                         DBUS_SESSION_BUS_ADDRESS \
                         DBUS_SYSTEM_BUS_ADDRESS \
                         DESKTOP_SESSION \
                         LANG \
                         SHELL \
                         SSH_AUTH_SOCK \
                         TERM \
                         TOOLBOX_PATH \
                         USER \
                         VTE_VERSION \
                         XAUTHORITY \
                         XDG_DATA_DIRS \
                         XDG_MENU_PREFIX \
                         XDG_RUNTIME_DIR \
                         XDG_SEAT \
                         XDG_VTNR )
    if [[ $WITH_GUI == 1 ]]; then
        preserved_vars+=( DISPLAY \
                              WAYLAND_DISPLAY \
                              XDG_SESSION_CLASS \
                              XDG_SESSION_DESKTOP \
                              XDG_SESSION_ID \
                              XDG_SESSION_TYPE \
                              XDG_CURRENT_DESKTOP )
        PODMAN_RUN_ARGS+=("-v /tmp/.X11-unix:/tmp/.X11-unix:rw")
    fi
    preserved_vars+=(LOGNAME)
    for var in "${preserved_vars[@]}"; do
        if [ "${!var+var_is_set}" = "var_is_set" ]; then
            PODMAN_RUN_ARGS+=(-e "$var=${!var}")
        fi
    done


    set -euxo pipefail
    
    if [[ ! -z "$CONTAINER_FOLDER" ]]; then
        if [[ ! -d "$CONTAINER_FOLDER/env" ]]; then
            CANDIDATE_FOLDER="$(dirname $(realpath $BASH_SOURCE))/../../containers/$CONTAINER_FOLDER/"
            if [[ ! -d "$CANDIDATE_FOLDER/env" ]]; then
                >&2 echo "Found no container folder, looked for: $CANDIDATE_FOLDER/env"
                exit 1
            else
                CONTAINER_FOLDER="$CANDIDATE_FOLDER"
            fi
        fi
        if [[ -e $CONTAINER_FOLDER/run-args.sh ]]; then
            source $CONTAINER_FOLDER/run-args.sh
        fi
	ENV_HASH=$(cat "$CONTAINER_FOLDER"/env/* | openssl sha256 | cut -f2 -d' ')
	IMAGE="localhost/$(basename ${CONTAINER_FOLDER}):${ENV_HASH:0:8}"
	if ! podman image ls | grep $IMAGE; then
	    podman build -t $IMAGE "$CONTAINER_FOLDER/env"
	fi
    fi

    if ! which podman; then
        PODMAN_CMD=docker
    else
        PODMAN_CMD=podman
    fi

    if [ "${PODMAN_CMD}" = podman ]; then
        PODMAN_RUN_ARGS+=(--user $(id -u):$(id -g))
        PODMAN_RUN_ARGS+=(--userns keep-id)
#          --user $UID:$GID \
#	   -e LOGNAME \
#          --cap-add=SYS_PTRACE \
    fi

        
    ${PODMAN_CMD} run \
           ${PODMAN_RUN_ARGS[@]} \
           -e TERM=xterm-256color\
           -v "$PWD":"$PWD" \
           -w "$PWD" \
           --detach-keys=ctrl-\] \
           --security-opt seccomp=unconfined \
           --rm \
           --name "$NAME" \
           -it "$IMAGE" \
           bash -c "${PRE_CMD:-}$*"
    exit
}
