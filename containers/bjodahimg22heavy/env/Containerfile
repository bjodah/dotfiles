# -*- mode: dockerfile -*-
FROM bjodah/bjodahimg22dot:jan23.a.1

MAINTAINER Bj√∂rn Dahlgren <bjodah@DELETEMEgmail.com>

ENV CC=gcc-12 CXX=g++-12

COPY 10100-setup_ubuntu_packages.sh 15000-pip-install.sh 75050-scipy.sh ./opt2 /opt2

RUN \
    apt-get update \
    && /opt2/10100-setup_ubuntu_packages.sh \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN \
    env CC=gcc-12 CXX=g++-12 /opt2/15000-pip-install.sh \
    && python3 -c "import z3" \
    && rm -rf /tmp/* /var/tmp/* /root/.cache/pip

#25000-install-pypy.sh
    # && env CC=gcc-12 CXX=g++-12 /opt2/25000-install-pypy.sh \

# RUN sed -i.bak 's/ scipy / /g' /opt/150-pip-install.sh \
#     && echo "see https://github.com/numpy/numpy/issues/22623#issuecomment-1320890687" \
#     && /opt2/cpython-3.11-release/bin/python3 -m pip install --ignore-installed setuptools==59.2.0 \
#     && env PYTHON=/opt2/cpython-3.11-release/bin/python3 /opt2/75050-scipy.sh

# RUN echo "see https://github.com/numpy/numpy/issues/22623#issuecomment-1320890687" \
#     && /opt2/cpython-3.11-debug/bin/python3 -m pip install --ignore-installed setuptools==59.2.0 \
#     && env PYTHON=/opt2/cpython-3.11-debug/bin/python3   /opt2/75050-scipy.sh

# RUN /opt2/cpython-3.11-release/bin/python3 -c "import scipy; print(scipy.__version__)" \
#     && env YARL_NO_EXTENSIONS=1 /opt2/cpython-3.11-release/bin/python3 -m pip install https://github.com/aio-libs/yarl/archive/master.tar.gz \
#     && env FROZENLIST_NO_EXTENSIONS=1 /opt2/cpython-3.11-release/bin/python3 -m pip install https://github.com/aio-libs/frozenlist/archive/master.tar.gz \
#     && env AIOHTTP_NO_EXTENSIONS=1 /opt2/cpython-3.11-release/bin/python3 -m pip install https://github.com/aio-libs/aiohttp/archive/master.tar.gz \
#     && env CC=gcc-12 CXX=g++-12 /opt2/cpython-3.11-release/bin/python3 -m pip install black ase asv check-manifest conan dufte epc flake8 holoviews[recommended] ipykernel ipython ipywidgets ipympl isort joblib jupyter matplotlib mpld3 mogli mypy nbconvert nbsphinx nbstripout "notebook<7" networkx Nikola[extras] numericalunits numpydoc param periodictable debugpy perfplot pulp pudb pycparser pycparser-fake-libc pygraphviz pylatex pytest-black pytest-cov pytest-docstyle pytest-flake8 pytest-flakes pytest-pep8 pytest-pudb pytest-xdist quantities rstcheck SciencePlots setuptools_scm sphinx sphinx_rtd_theme sympy termplotlib toolz virtualenv websockets xarray yq \
#     && rm -r ~/.cache/pip

# COPY 85000-julia.sh /opt2/

# RUN /opt2/85000-julia.sh

# COPY emacs-pgtk-gcc_29.0.50.deb /opt/

# RUN /usr/local/bin/npm -g --prefix /root/.emacs.d.29/.cache/lsp/npm/pyright install pyright \
#     && dpkg -i /opt/emacs-pgtk-gcc_29.0.50.deb  \
#     && bash -c 'EMACS_PREFIX=$(realpath $(compgen -G /opt/emacs-29*/)) /opt/2050-build-emacs-vterm.sh'

# RUN cd /opt/bjodah-dotfiles \
#     && git pull \
#     && git pull \
#     && sed "s/(package-install 'use-package)/;(package-install 'use-package)/g" -i /opt/bjodah-dotfiles/depth-2/.emacs.default/init.el \
#     && git clone --branch fix_gh-669 --depth 1 https://github.com/bjodah/use-package.git /build/use-package \
#     && bash -c 'cd /build/use-package; PREFIX=$(realpath $(compgen -G /opt/emacs-29*/)); PATH=$PREFIX/bin:$PATH make PREFIX=$PREFIX -C /build/use-package elc install-lisp' \
#     && rm -r /root/.emacs.d/ \
#     && /opt/2175-setup-emacs.sh /opt/emacs-29*/ ~/.emacs.d.29 /opt/bjodah-dotfiles \
#     && sed "s/;(package-install 'use-package)/(package-install 'use-package)/g" -i /opt/bjodah-dotfiles/depth-2/.emacs.default/init.el \
#     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# COPY 86000-herbie.sh /opt/
# RUN /opt/86000-herbie.sh

# COPY opt_boost_1_81_0_b1.tar.zst 87000-get_symengine.sh /opt/

# RUN zstd -d </opt/opt_boost_1_81_0_b1.tar.zst | tar x \
#     &&   \
#     && rm -rf /tmp/*


# RUN git clone https//github.com/uwplse/herbgrind /opt/herbgrind \
#     && ln -s /usr/bin/automake /usr/local/bin/automake-1.15 \
#     && make && make install

# scikit-image scikit-optimize statsmodels "numba<0.56"

# env CC=gcc-12 CXX=g++-12 PYTHON=/opt/cpython-3.11-debug/bin/python3 /opt/150-pip-install.sh \
# && /opt/cpython-3.11-debug/bin/python3 -m pip install debugpy \



# RUN git clone https://github.com/mattgodbolt/seasocks.git /build/seasocks && \
#     cmake -S /build/seasocks -B /build/seasocks/build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/opt/seasocks -DCMAKE_EXPORT_COMPILE_COMMANDS=ON && \
#     cmake --build /build/seasocks/build && \
#     cmake --install /build/seasocks/build && \
#     ln -s /build/seasocks/build/compile_commands.json /opt/seasocks/



# https://gitlab.inria.fr/gappa/gappa
# https://www.sollya.org/
# (https://gitlab.com/flopoco/flopoco)

